@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    var currentUser =await UserManager.GetUserAsync(User);
}

@if (SignInManager.IsSignedIn(User))
{

    <a id="manage" class="flex-c-m trans-04 p-lr-25" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>

    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
    </form>
    @if (User.IsInRole("Admin"))
    {
        <a class="flex-c-m trans-04 p-lr-25" asp-area="Admin" asp-action="Index" asp-controller="Home" title="Manage">Admin Dashboard</a>
    }

}
else
{
    <a class="flex-c-m trans-04 p-lr-25" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>

    <a class="flex-c-m trans-04 p-lr-25" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>

}

